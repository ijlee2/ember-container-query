name: CI

on: 
  push:
    branches:
      - main
  pull_request:

env:
  NODE_VERSION: 16
  PERCY_PARALLEL_NONCE: ${{ github.run_id }}-${{ github.run_number }}
  PERCY_PARALLEL_TOTAL: 9

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package-location:
          - 'docs-app'
          - 'ember-container-query'
          - 'test-app'
    timeout-minutes: 5
    steps:
      - name: Check out a copy of the repo
        uses: actions/checkout@v3

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          cache: 'pnpm'
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm lint
        working-directory: ${{ matrix.package-location }}


  build-docs-app:
    name: Build (docs-app)
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check out a copy of the repo
        uses: actions/checkout@v3

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          cache: 'pnpm'
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build docs-app
        run: pnpm build:test
        working-directory: 'docs-app'

      - name: Upload docs-app
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: docs-app/dist


  test-docs-app:
    name: Test (docs-app)
    needs: [build-docs-app]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        device:
          - 'w1-h1'
          - 'w2-h1'
          - 'w3-h1'
          - 'w1-h2'
          - 'w2-h2'
          - 'w3-h2'
          - 'w1-h3'
          - 'w2-h3'
          - 'w3-h3'
        include:
          - device: 'w1-h1'
            test-port: 7357
          - device: 'w2-h1'
            test-port: 7358
          - device: 'w3-h1'
            test-port: 7359
          - device: 'w1-h2'
            test-port: 7360
          - device: 'w2-h2'
            test-port: 7361
          - device: 'w3-h2'
            test-port: 7362
          - device: 'w1-h3'
            test-port: 7363
          - device: 'w2-h3'
            test-port: 7364
          - device: 'w3-h3'
            test-port: 7365
    timeout-minutes: 5
    steps:
      - name: Check out a copy of the repo
        uses: actions/checkout@v3

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          cache: 'pnpm'
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Download docs-app
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: docs-app/dist

      - name: Test (w/ visual regression)
        run: npx percy exec -- pnpm test:device --path=dist --test-port=${{ matrix.test-port }}
        working-directory: 'docs-app'
        env:
          DEVICE: ${{ matrix.device }}
          PERCY_PARALLEL_NONCE: ${{ env.PERCY_PARALLEL_NONCE }}
          PERCY_PARALLEL_TOTAL: ${{ env.PERCY_PARALLEL_TOTAL }}
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}


  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package-location:
          - 'ember-container-query'
          - 'test-app'
    timeout-minutes: 5
    steps:
      - name: Check out a copy of the repo
        uses: actions/checkout@v3

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          cache: 'pnpm'
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Test
        run: pnpm test
        working-directory: ${{ matrix.package-location }}


  test-compatibility:
    name: Test compatibility
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        scenario:
          - 'ember-lts-4.4'
          - 'ember-lts-4.8'
          - 'ember-lts-4.12'
          - 'ember-release'
          - 'ember-beta'
          - 'ember-canary'
          - 'embroider-safe'
          - 'embroider-optimized'
    timeout-minutes: 5
    steps:
      - name: Check out a copy of the repo
        uses: actions/checkout@v3

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          cache: 'pnpm'
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Test
        run: pnpm test:ember-compatibility ${{ matrix.scenario }} --- pnpm test
        working-directory: 'test-app'
